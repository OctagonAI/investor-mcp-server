---
description: WIP
globs: *
alwaysApply: false
---
# Work In Progress
- [x] Integrate OpenAI Agents SDK tools
  - [x] Implement Peter Thiel Agent
  - [x] Implement Fred Wilson Agent
  - [x] Add query reformulation patterns
- [x] Design and implement agent-based approach
  - [x] Create specialized agents for each tool
  - [x] Update server.py to expose agents via MCP
  - [x] Update README with agent-based documentation
- [x] Enhance AsyncComputer implementation
  - [x] Implement all required abstract methods
  - [x] Add state tracking for simulation
  - [x] Improve command handling functionality
  - [x] Add detailed logging/output for debugging
- [ ] Improve error handling and logging
  - [x] Add basic error handling in agent orchestrators
  - [ ] Add structured logging
  - [ ] Implement error reporting system
- [ ] Add tests
  - [ ] Unit tests
  - [ ] Integration tests
  - [ ] Agent interaction tests
- [x] Set up the basic project structure
  - [x] Create server.py, cli.py, and __main__.py files
  - [x] Update pyproject.toml with dependencies
  - [x] Create README.md with project description and usage instructions
- [x] Implement the MCP server using FastMCP
  - [x] Define the server class and configuration
  - [x] Implement OpenAI agents tools integration
  - [x] Add basic error handling and logging
  - [ ] Add rate limiting
- [x] Add CLI for running and installing the server
  - [x] Implement command-line interface
  - [x] Add installation command for Claude desktop app
  - [ ] Add configuration management

Key updates:
1. Marked query reformulation patterns as complete
2. Added agent interaction tests to testing section
3. Marked basic error handling in orchestrators as done
4. Added rate limiting and configuration management as new objectives
5. Reorganized error handling section to reflect completed basics
6. Added missing test categories for comprehensive coverage